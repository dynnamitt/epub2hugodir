#!/bin/sh

EP_CONT=META-INF/container.xml
HUGO_CONF=config.toml

usage() {
  echo "Error: '$1'"
  echo
  echo Usage:
  echo "  $0 draftRegex epubfile [destdir] [-- [hugoFlags]]"
  exit 1

}

have_cmd(){
  command -v $1 >/dev/null 2>&1 || {
    echo >&2
    echo >&2 " - I require [$1] but it's not installed."
    echo >&2 "   Aborting."
    exit 1; }
}

file_chk_die(){
  stat $1 >/dev/null 2>&1 || {
    echo >&2 "File not found; '$1'"
    exit 1; } 
}

path_chk_warn(){
  stat $1 >/dev/null 2>&1 || {
    echo >&2 "Warning , path not found; '$1'"; }
}

xslt_doc(){
  cat << _EOF
<xsl:stylesheet version="1.0" 
 xmlns:cont="urn:oasis:names:tc:opendocument:xmlns:container"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <xsl:output type="text" encoding="utf-8" omit-xml-declaration="yes"/>
$@
</xsl:stylesheet>
_EOF
}

xslt_templ(){
  printf "<xsl:template match=\"$1\">"
  shift
  printf "$@</xsl:template>"
}

rootfile(){
  xslt_doc $(xslt_templ \
    "//cont:rootfile[@media-type=\'application/oebps-package+xml\']" \
    "<xsl:value-of select=\"@full-path\"/>" )
}




# TODO grab ALL flags and shift;shift;shift until no more flags

ISDRAFT_REGEX=$1
EPUB=$2

test -z $ISDRAFT_REGEX && usage "draftRegex empty" 
test -z $EPUB && usage "epubfile empty"

printf "* Checking availiable COMMANDs in system..."
have_cmd grep
have_cmd stat
have_cmd readlink
have_cmd hugo
have_cmd xsltproc
echo "ok"

alias realpath="readlink -f"

if test -d "$EPUB"; then
  printf "* epubfile is assumed to be extracted-dir..."
  file_chk_die "$EPUB/$EP_CONT"
  echo "ok"
else
  echo "* epubfile will be unzipped."
  ZIPPED=1
  file_chk_die "$EPUB"
  have_cmd unzip
fi

ep_dir=$(realpath $(dirname $EPUB))

HUGODIR=$(realpath ${3:-$ep_dir})
path_chk_warn $HUGODIR

if test "$ep_dir" = "$HUGODIR"
then 
  echo "NB ; destdir same as EPUB location"
fi

# DIE fast if tools fail
set -e

# Unzip or CP if needed
if test "$ZIPPED" = "1"
then
  printf "* unzipping into $HUGODIR..."
  unzip -q "$EPUB" -d "$HUGODIR"
  echo "ok"
elif test ! "$HUGODIR" = "$ep_dir"
then
  printf "* mkdir+copying into $HUGODIR..."
  mkdir -p $HUGODIR
  cp -r "$EPUB"/* "$HUGODIR"
  echo "ok"
fi


cd $HUGODIR

rootfile

# EP_ROOT_PATH="$(xsltproc $XSL_EP_ROOTFILE $EP_CONT)" 


# # config.toml
# cat << _EOF > $HUGO_CONF
# contentdir=$(dirname $EP_ROOT_PATH)
# _EOF

